
BT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000e6  0000015a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000015a  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000028  00000000  00000000  0000018a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000001dc  00000000  00000000  000001b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000011c  00000000  00000000  0000038e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000140  00000000  00000000  000004aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000034  00000000  00000000  000005ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000162  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000111  00000000  00000000  00000782  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000068  00000000  00000000  00000893  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	0c d0       	rcall	.+24     	; 0x4c <main>
  34:	56 c0       	rjmp	.+172    	; 0xe2 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <uart_rec>:
//#define F_CPU 12000000


char uart_rec()
{
	UCSRB|=(1<<RXEN);
  38:	54 9a       	sbi	0x0a, 4	; 10
	UCSRC|=(1<<URSEL)|(1<<UCSZ0)|(1<<UCSZ1);
  3a:	80 b5       	in	r24, 0x20	; 32
  3c:	86 68       	ori	r24, 0x86	; 134
  3e:	80 bd       	out	0x20, r24	; 32
	UBRRL=77;
  40:	8d e4       	ldi	r24, 0x4D	; 77
  42:	89 b9       	out	0x09, r24	; 9
	
	while((UCSRA & (1<<RXC))==0);
  44:	5f 9b       	sbis	0x0b, 7	; 11
  46:	fe cf       	rjmp	.-4      	; 0x44 <__SREG__+0x5>
	return UDR;
  48:	8c b1       	in	r24, 0x0c	; 12
}
  4a:	08 95       	ret

0000004c <main>:


void main()
{
	DDRB=0xFF;
  4c:	8f ef       	ldi	r24, 0xFF	; 255
  4e:	87 bb       	out	0x17, r24	; 23
	char x;
    while(1)
    {
        x=uart_rec();
  50:	f3 df       	rcall	.-26     	; 0x38 <uart_rec>
		if(x=='1')
  52:	81 33       	cpi	r24, 0x31	; 49
  54:	71 f4       	brne	.+28     	; 0x72 <main+0x26>
		PORTB|=(1<<PB2);
  56:	c2 9a       	sbi	0x18, 2	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  58:	e3 ec       	ldi	r30, 0xC3	; 195
  5a:	f9 e0       	ldi	r31, 0x09	; 9
  5c:	31 97       	sbiw	r30, 0x01	; 1
  5e:	f1 f7       	brne	.-4      	; 0x5c <main+0x10>
  60:	00 c0       	rjmp	.+0      	; 0x62 <main+0x16>
  62:	00 00       	nop
  64:	e3 ec       	ldi	r30, 0xC3	; 195
  66:	f9 e0       	ldi	r31, 0x09	; 9
  68:	31 97       	sbiw	r30, 0x01	; 1
  6a:	f1 f7       	brne	.-4      	; 0x68 <main+0x1c>
  6c:	00 c0       	rjmp	.+0      	; 0x6e <main+0x22>
  6e:	00 00       	nop
  70:	26 c0       	rjmp	.+76     	; 0xbe <main+0x72>
  72:	e3 ec       	ldi	r30, 0xC3	; 195
  74:	f9 e0       	ldi	r31, 0x09	; 9
  76:	31 97       	sbiw	r30, 0x01	; 1
  78:	f1 f7       	brne	.-4      	; 0x76 <main+0x2a>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <main+0x30>
  7c:	00 00       	nop
		_delay_ms(10);
		if(x=='2')
  7e:	82 33       	cpi	r24, 0x32	; 50
  80:	71 f4       	brne	.+28     	; 0x9e <main+0x52>
		PORTB|=(1<<PB3);
  82:	c3 9a       	sbi	0x18, 3	; 24
  84:	83 ec       	ldi	r24, 0xC3	; 195
  86:	99 e0       	ldi	r25, 0x09	; 9
  88:	01 97       	sbiw	r24, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <main+0x3c>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <main+0x42>
  8e:	00 00       	nop
  90:	e3 ec       	ldi	r30, 0xC3	; 195
  92:	f9 e0       	ldi	r31, 0x09	; 9
  94:	31 97       	sbiw	r30, 0x01	; 1
  96:	f1 f7       	brne	.-4      	; 0x94 <main+0x48>
  98:	00 c0       	rjmp	.+0      	; 0x9a <main+0x4e>
  9a:	00 00       	nop
  9c:	1b c0       	rjmp	.+54     	; 0xd4 <main+0x88>
  9e:	e3 ec       	ldi	r30, 0xC3	; 195
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	31 97       	sbiw	r30, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <main+0x56>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <main+0x5c>
  a8:	00 00       	nop
		_delay_ms(10);
		if(x=='3')
  aa:	83 33       	cpi	r24, 0x33	; 51
  ac:	41 f4       	brne	.+16     	; 0xbe <main+0x72>
		PORTB|=(1<<PB4);
  ae:	c4 9a       	sbi	0x18, 4	; 24
  b0:	83 ec       	ldi	r24, 0xC3	; 195
  b2:	99 e0       	ldi	r25, 0x09	; 9
  b4:	01 97       	sbiw	r24, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <main+0x68>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x6e>
  ba:	00 00       	nop
  bc:	0b c0       	rjmp	.+22     	; 0xd4 <main+0x88>
  be:	e3 ec       	ldi	r30, 0xC3	; 195
  c0:	f9 e0       	ldi	r31, 0x09	; 9
  c2:	31 97       	sbiw	r30, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x76>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x7c>
  c8:	00 00       	nop
		_delay_ms(10);
		if(x=='4')
  ca:	84 33       	cpi	r24, 0x34	; 52
  cc:	19 f4       	brne	.+6      	; 0xd4 <main+0x88>
		PORTB&=~((1<<PB2)|(1<<PB3)|(1<<PB4));
  ce:	88 b3       	in	r24, 0x18	; 24
  d0:	83 7e       	andi	r24, 0xE3	; 227
  d2:	88 bb       	out	0x18, r24	; 24
  d4:	83 ec       	ldi	r24, 0xC3	; 195
  d6:	99 e0       	ldi	r25, 0x09	; 9
  d8:	01 97       	sbiw	r24, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x8c>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x92>
  de:	00 00       	nop
  e0:	b7 cf       	rjmp	.-146    	; 0x50 <main+0x4>

000000e2 <_exit>:
  e2:	f8 94       	cli

000000e4 <__stop_program>:
  e4:	ff cf       	rjmp	.-2      	; 0xe4 <__stop_program>
